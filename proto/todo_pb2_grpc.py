# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from database.models.todo_models import Todo
import proto.todo_pb2 as todo__pb2
from google.protobuf import empty_pb2

class TodoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetTodo = channel.unary_unary(
                '/todo.TodoService/GetTodo',
                request_serializer=todo__pb2.GetTodoRequest.SerializeToString,
                response_deserializer=todo__pb2.Todo.FromString,
                )
        self.CreateTodo = channel.unary_unary(
                '/todo.TodoService/CreateTodo',
                request_serializer=todo__pb2.GetTodoRequest.SerializeToString,
                response_deserializer=todo__pb2.Todo.FromString,
                )
        self.GetTodoList = channel.unary_unary(
                '/todo.TodoService/GetTodoList',
                request_serializer=todo__pb2.void.SerializeToString,
                response_deserializer=todo__pb2.TodoList.FromString,
                )
        self.UpdateTodo = channel.unary_unary(
                '/todo.TodoService/UpdateTodo',
                request_serializer=todo__pb2.GetTodoRequest.SerializeToString,
                response_deserializer=todo__pb2.Todo.FromString,
                )
        
        self.DeleteTodo = channel.unary_unary(
                '/todo.TodoService/DeleteTodo',
                request_serializer=todo__pb2.GetTodoRequest.SerializeToString,
                response_deserializer=todo__pb2.Todo.FromString,
                )


class TodoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    async def GetTodo(self, request, context: grpc.aio.ServicerContext,):
        """Missing associated documentation comment in .proto file."""
        todo = await Todo.get(Todo.id==request.id)
        if todo:
            return todo__pb2.Todo(id=todo.id,
                                  title=todo.title,
                                  description=todo.description)
        else:
            return todo__pb2.Todo()
        
    async def CreateTodo(self, request, context: grpc.aio.ServicerContext):
        todo = Todo(title=request.title, decription=request.description)
        await todo.save()     
        return todo__pb2.Todo(
                id=todo.id,
                title=todo.title,
                description=todo.description,
        )

    async def GetTodoList(self, request, context: grpc.aio.ServicerContext,):
        todos = await Todo.all()
        return [todo__pb2.Todo(id=x.id, title=x.title, description=x.description) for x in todos]
        
        
    async def UpdateTodo(self, request, context: grpc.aio.ServicerContext,):
        """Missing associated documentation comment in .proto file."""
        todo = await Todo.get(Todo.id==request.id)
        await todo.update(title=request.title, decription=request.description)
        return todo__pb2(title=request.title, description=request.description)
        
        
    async def DeleteTodo(self, request, context: grpc.aio.ServicerContext,):
        """Missing associated documentation comment in .proto file."""
        todo = await Todo.get(Todo.id==request.id)
        if todo:
            await todo.delete()
            return empty_pb2.Empty()
        else:
            context.set_code(grpc.StatusCode.NOT_FOUND)
            context.set_details("Todo not found")
            return empty_pb2.Empty()

def add_TodoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetTodo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTodo,
                    request_deserializer=todo__pb2.GetTodoRequest.FromString,
                    response_serializer=todo__pb2.Todo.SerializeToString,
            ),
            'CreateTodo': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTodo,
                    request_deserializer=todo__pb2.GetTodoRequest.FromString,
                    response_serializer=todo__pb2.Todo.SerializeToString,
            ),
            'GetTodoList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTodoList,
                    request_deserializer=todo__pb2.void.FromString,
                    response_serializer=todo__pb2.TodoList.SerializeToString,
            ),
            'UpdateTodo': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTodo,
                    request_deserializer=todo__pb2.GetTodoRequest.FromString,
                    response_serializer=todo__pb2.Todo.SerializeToString,
            ),
            'DeleteTodo': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTodo,
                    request_deserializer=todo__pb2.GetTodoRequest.FromString,
                    response_serializer=todo__pb2.Todo.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'todo.TodoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
        